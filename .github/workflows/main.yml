name: Build for aarch64-musl

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Cargo registry and target directory
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Build
        run: |
          docker run --rm --platform linux/arm64 \
            -v $PWD:/workspace \
            -w /workspace \
            rust:bullseye \
            sh -c "
              apt-get update && \
              apt-get install -y gcc-aarch64-linux-gnu libinput-dev && \
              rustup target add aarch64-unknown-linux-gnu && \
              export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc && \
              cargo build --release --target aarch64-unknown-linux-gnu
            "
      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-musl-binary
          path: target/aarch64-unknown-linux-gnu/release/WiiBlue